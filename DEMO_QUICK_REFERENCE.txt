# 📋 QUICK REFERENCE CARD - DEMO HOẠT ĐỘNG 6
# In ra giấy này để đọc trong khi demo!

---

## ⏱️ TIMELINE (15 phút)

| Thời gian | Nội dung | Action |
|-----------|----------|--------|
| 0:00-1:30 | Giới thiệu | Show overview, files |
| 1:30-4:00 | Redux Code | store.js, authSlice.js |
| 4:00-6:00 | Protected Routes | ProtectedRoute.jsx |
| 6:00-14:00 | **LIVE DEMO** | **Test tất cả** |
| 14:00-16:00 | Code Review | Login.jsx, App.jsx |
| 16:00-17:00 | Tools & Docs | Debugger, README |
| 17:00-18:00 | Kết luận | Summary |

---

## 🎯 DEMO FLOW (Section 6:00-14:00)

### 1️⃣ PUBLIC ACCESS (1 min)
```
✓ Vào http://localhost:3000
✓ F12 → Redux DevTools
✓ Console: localStorage.getItem('accessToken') → null
✓ Thử /profile → Redirect /login ✅
✓ Thử /admin → Redirect /login ✅
```

**Nói:** "Chưa login → không vào được protected routes"

---

### 2️⃣ SIGNUP (1 min)
```
✓ Vào /signup
✓ Nhập: test@example.com / test123
✓ Click Đăng ký
✓ Redux DevTools: signup/pending → fulfilled
✓ Redirect /login ✅
```

**Nói:** "Signup thành công, redirect login"

---

### 3️⃣ LOGIN USER (1.5 min)
```
✓ Nhập: test@example.com / test123
✓ Click Đăng nhập
✓ Redux DevTools:
  - login/pending
  - login/fulfilled
  - State: isAuthenticated = true
✓ Console:
  - localStorage.getItem('accessToken') → có
  - localStorage.getItem('refreshToken') → có
✓ Redux Debugger panel: ✅ Authenticated
✓ Redirect /profile ✅
```

**Nói:** "Login OK → tokens saved → Redux updated → redirect profile"

---

### 4️⃣ USER ACCESS (1.5 min)
```
✓ Đang ở /profile → Thấy user info ✅
✓ Click Upload Avatar → /upload-avatar ✅
✓ Try /admin → Redirect / ❌ (không có quyền)
```

**Nói:** "User vào được profile, nhưng KHÔNG vào được admin"

---

### 5️⃣ PERSISTENT STATE (1 min)
```
✓ Nhấn F5 refresh
✓ Vẫn login ✅
✓ User info vẫn có ✅
✓ Redux state OK ✅
✓ Console: tokens vẫn còn ✅
```

**Nói:** "State persist → auto restore từ localStorage"

---

### 6️⃣ LOGOUT (30 sec)
```
✓ Click Đăng xuất
✓ Redux: logout action
✓ State cleared
✓ Console: localStorage → null
✓ Redirect /login
```

**Nói:** "Logout clear tất cả"

---

### 7️⃣ LOGIN ADMIN (1.5 min)
```
✓ Login: admin@example.com / admin123
✓ Redux state: role = "admin" ← HIGHLIGHT
✓ Nav có: Admin Dashboard, Activity Logs ✅
✓ Click Admin Dashboard → /admin ✅
✓ Click Activity Logs → /admin/logs ✅
```

**Nói:** "Admin có role → vào được admin routes"

---

## 💬 KEY PHRASES

### Redux Architecture:
> "Redux Toolkit với configureStore và createSlice"
> "Async thunks xử lý API calls"
> "JWT decoder extract user info từ token"
> "Auto-save localStorage cho persistence"

### Protected Routes:
> "Component kiểm tra isAuthenticated từ Redux"
> "Redirect /login nếu chưa authenticate"
> "Check role nếu có requiredRole"
> "Redirect / nếu không đủ quyền"

### Demo:
> "Redux DevTools show action flow"
> "Tokens lưu localStorage"
> "State persist qua refresh"
> "Role-based access hoạt động"

---

## 🔧 CONSOLE COMMANDS

```javascript
// Check tokens
localStorage.getItem('accessToken')
localStorage.getItem('refreshToken')

// Clear all
localStorage.clear()

// Decode JWT (if needed)
function decodeJWT(token) {
  const base64Url = token.split('.')[1];
  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
  return JSON.parse(atob(base64));
}
decodeJWT(localStorage.getItem('accessToken'))
```

---

## 📂 FILES TO SHOW

### Code Files (in order):
1. `src/redux/store.js`
2. `src/redux/authSlice.js`
3. `src/components/ProtectedRoute.jsx`
4. `src/index.js`
5. `src/pages/Login.jsx`
6. `src/App.jsx`

### Documentation:
1. `BAO_CAO_HOAT_DONG_6.md`
2. `CHECKLIST_HOAT_DONG_6.md`

---

## ✅ DEMO CHECKLIST

Before recording:
- [ ] Backend running: `cd backend && node index.js`
- [ ] Frontend running: `cd frontend && npm start`
- [ ] localStorage cleared
- [ ] Browser zoom 110%
- [ ] VS Code font 16-18px
- [ ] Redux DevTools installed
- [ ] Close extra tabs/apps
- [ ] Mute notifications

During demo:
- [ ] Show Redux DevTools actions
- [ ] Highlight code when explaining
- [ ] Point mouse to important parts
- [ ] Speak clearly, not too fast
- [ ] Pause between sections

To demo:
- [ ] Public access blocked
- [ ] Signup flow
- [ ] Login flow
- [ ] User routes OK
- [ ] Admin routes blocked for user
- [ ] Page refresh persist
- [ ] Logout works
- [ ] Admin can access all

---

## 🎤 OPENING SCRIPT

> "Xin chào! Em là [Tên], SV Frontend #2, nhóm 12.
> 
> Hôm nay em demo Hoạt động 6: Redux & Protected Routes.
> 
> Mục tiêu:
> 1. Redux Toolkit quản lý auth state
> 2. Protected Routes bảo vệ trang
> 3. Role-based access control
> 
> Demo gồm 3 phần: Code, Live Demo, Documentation.
> Bắt đầu!"

---

## 🎤 CLOSING SCRIPT

> "Tóm lại em đã hoàn thành:
> 
> ✅ Redux Toolkit - store, slice, thunks
> ✅ Protected Routes - auth & role check
> ✅ Persistent auth - localStorage
> ✅ Debug tools & documentation
> 
> Code đã push GitHub, docs đầy đủ.
> 
> Cảm ơn thầy/cô đã theo dõi!"

---

## ⚠️ IF SOMETHING GOES WRONG

### Backend not running:
```powershell
cd backend
node index.js
```

### Frontend error:
```powershell
cd frontend
npm start
```

### Redux state weird:
```javascript
localStorage.clear()
# Refresh page
```

### Can't login:
- Check backend console for errors
- Check Network tab (F12)
- Try: admin@example.com / admin123

---

## 📱 CONTACTS FOR HELP

- Team member 1: [SĐT]
- Team member 2: [SĐT]
- GitHub: NguyenToanThanh/group12-project

---

## 🎯 REMEMBER

✅ Nói rõ, từ tốn
✅ Show Redux DevTools
✅ Test cả user và admin
✅ Demo persistence
✅ Tự tin!

❌ Đừng nói quá nhanh
❌ Đừng skip steps
❌ Đừng quên admin demo

---

**YOU GOT THIS! 🚀**

Good luck! 🍀
